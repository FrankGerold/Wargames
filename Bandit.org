#+TITLE: Bandit
#+AUTHOR: Frank Gerold
#+DESCRIPTION: Introduction / Tutorial to Wargames and linux security concepts.
#+DATE: <2021-02-06 Sat>

* Info
- First game on Over The Wire
  + https://overthewire.org/wargames/bandit/
- For absolute beginners
- teaches how to play wargames
- Each level has specific objective, and bash command hints for completing the task
- Beating a level results in instructions on how to access next level
- 34 levels total

* Walkthrough

** Level 0
- ~ssh -p 2220 bandit0@bandit.labs.overthewire.org~
  + pass ~bandit0~

- Tips
  + This machine has a 64bit processor and many security-features enabled
    by default, although ASLR has been switched off.  The following
    compiler flags might be interesting:

        -m32                    compile for 32bit
        -fno-stack-protector    disable ProPolice
         -Wl,-z,norelro          disable relro

  + In addition, the execstack tool can be used to flag the stack as
       executable on ELF binaries.

  + Finally, network-access is limited for most levels by a local
  firewall.


 - Tools

   + For your convenience we have installed a few usefull tools which you can find
     in the following locations:
     - gef (https://github.com/hugsy/gef) in /usr/local/gef/
     - pwndbg (https://github.com/pwndbg/pwndbg) in /usr/local/pwndbg/
     - peda (https://github.com/longld/peda.git) in /usr/local/peda/
     - gdbinit (https://github.com/gdbinit/Gdbinit) in /usr/local/gdbinit/
     - pwntools (https://github.com/Gallopsled/pwntools)
     - radare2 (http://www.radare.org/)
     - checksec.sh (http://www.trapkit.de/tools/checksec.html) in /usr/local/bin/checksec.sh



** Level 1 (0 -> 1)
+ Readme file in home folder contains password
+ Pass: ~boJ9jbbUNNfktd78OOpsqOltutMc3MY1~

** Level 2 (1 -> 2)
- File ~-~ in home directory.
- Tricky because ~-~ is an argument meaning STDIN/STDOUT
- Used ~./-~
- Pass: ~CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9~

** Level 3 (2 -> 3)
- file ~spaces in this filename~
- Use \ to escape the spaces
  ~UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK~

** Level 4
- Hidden file
- ~ls -al~
- ~pIwrPrtPN36QITSp3EQaw936yaFoFgAB~

** Level 5
- ~inhere~ dir of files, only one human readable
- Used ~find~
  + Find recursively descends the directory tree
    - can be filtered w/ regex (i didnt)
    - Using ~-exec~ flag:
      + takes in a function and and optional arguments, terminated with ~;~
      + ~{}~ is replaced in args w/ current file pathname
      + SO: ~find $(pwd) -exec file {} \;~
        - gives list of the type of each file in pwd
      + Apparently some systems dont have the exec flag
        - in this case use ~xargs~
          + Pipe the find pwd into xargs file
            - this will run file with each file in pwd as its arg.
          + ~find $(pwd) | xargs file~
            - apparently this doesnt account for space characters (not an issue in this specific case)
              so if spaces in filenames are an issue:
              + ~-print0~ flag on ~find~ uses NUL (char code 0) to separate list, rather than whitespace
              + Then, ~-0~ option on ~xargs~ makes it break its input on NUL chars as well.
              + Finally, ~-r~ flag in ~xargs~ stops it from throwing an error on no input.
              + SO: ~find $(pwd) -print0 | xargs -0r file~
  + File 7 is the only ascii text
- ~koReBOKuIDDepwhWk7jZC0RTdopnAYKh~


** Level 6


** Password Table
| Level | Password                         | Note       |
|-------+----------------------------------+------------|
|     0 | bandit0                          | Start Game |
|     1 | boJ9jbbUNNfktd78OOpsqOltutMc3MY1 |            |
|     2 | CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9 |            |
|     3 | UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK |            |
|     4 | pIwrPrtPN36QITSp3EQaw936yaFoFgAB |            |
|     5 | koReBOKuIDDepwhWk7jZC0RTdopnAYKh |            |


* Random Notes
